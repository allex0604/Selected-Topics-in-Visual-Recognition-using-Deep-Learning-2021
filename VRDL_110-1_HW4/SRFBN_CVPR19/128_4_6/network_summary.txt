SRFBN(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (conv_in): Sequential(
    (0): Conv2d(3, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PReLU(num_parameters=1)
  )
  (feat_in): Sequential(
    (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))
    (1): PReLU(num_parameters=1)
  )
  (block): FeedbackBlock(
    (compress_in): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): PReLU(num_parameters=1)
    )
    (upBlocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (2): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (3): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (4): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (5): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
    )
    (downBlocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (1): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (2): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (3): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (4): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
      (5): Sequential(
        (0): Conv2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
        (1): PReLU(num_parameters=1)
      )
    )
    (uptranBlocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (1): Sequential(
        (0): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (2): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (3): Sequential(
        (0): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (4): Sequential(
        (0): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
    )
    (downtranBlocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (1): Sequential(
        (0): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (2): Sequential(
        (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (3): Sequential(
        (0): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (4): Sequential(
        (0): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): PReLU(num_parameters=1)
      )
    )
    (compress_out): Sequential(
      (0): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): PReLU(num_parameters=1)
    )
  )
  (out): Sequential(
    (0): ConvTranspose2d(128, 128, kernel_size=(7, 7), stride=(3, 3), padding=(2, 2))
    (1): PReLU(num_parameters=1)
  )
  (conv_out): Sequential(
    (0): Conv2d(128, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
)
Network structure: [DataParallel - SRFBN], with parameters: [11,309,750]